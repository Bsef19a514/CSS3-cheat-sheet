/* container properties */
/* 
    grid-template-columns
    grid-template-rows

    grid-auto-flow
    grid-auto-columns
    grid-auto-rows
    
    grid-column-gap
    grid-row-gap
    grid-gap

    justify-items
    align-itmes
    place-itmes

    justify-content
    align-content
    place-content

    grid-template-areas
    grid-template 
    grid
*/
.container{
    border: 2px solid red;
    text-align: center;
    height: 400px;
    width: 90%;
    display: grid;
    grid: 50px 50px/[col-1] 1fr [col-2] 1fr [col-3] 1fr [col-4];
    grid-auto-rows: 50px;
   
}
.item{
    border: 1px solid green;
    background-color: skyblue;
}


/* item properties */
/* 
    grid-column-start
    grid-column-end,
    grid-row-start
    grid-row-end,
    grid-column
    grid-row,
    grid-area,
    justify-self,
    align-self
    place-self
*/

.one{
    grid-column-start: col-1;
    /* grid-column-end: 4; */
    grid-column-end: -1;  /*till last column line*/
    grid-column-end: col-4; /*using column name*/
    grid-column-end: span 3; /*span the div 3 columns*/

    /* grid-column is the short hand property of  grid-column-start and grid-column-end,*/
    /* grid-column: start / end */
    grid-column: col-1/col-4
}
.two{
    /* from which row line no the element is going to start */
    grid-row-start: 3;
    grid-row-end: 6;

    /* grid-row is the short hand property of  grid-row-start and grid-row-end,*/
    /* grid-row: start / end */
    grid-row: 3/6
}
.four{
    align-self: center;
    justify-self: start;
    place-self: center end;
    place-self: stretch;
}

.three{
    /* grid area can be use din two ways
    1) grid-area= row-start/column-start/row-end/column-end
    2) using with container's grid-template-area prperty
    */
    grid-area: 2/1/3/-1;
}
